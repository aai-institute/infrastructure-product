name: "Backend: Docker Image"

on:
    push:
        branches:
            - main
    pull_request:
        paths:
            - backend/**
            - .github/**
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest

        permissions:
            id-token: write
            contents: read
            packages: write
            attestations: write

        env:
            REGISTRY: ghcr.io
            IMAGE_NAME: ${{ github.repository_owner }}/jobq-server

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                      # branch event
                      type=ref,event=branch
                      # tag event
                      type=ref,event=tag
                      # pull request event
                      type=ref,event=pr

            - name: Build and push Docker image
              uses: docker/build-push-action@v6
              id: push
              with:
                  context: backend
                  file: backend/Dockerfile
                  push: true
                  platforms: linux/amd64,linux/arm64
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

            - name: Generate artifact attestation
              uses: actions/attest-build-provenance@v1
              with:
                  subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  subject-digest: ${{ steps.push.outputs.digest }}
                  push-to-registry: true
                  github-token: ${{ github.token }}
